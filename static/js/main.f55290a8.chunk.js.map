{"version":3,"sources":["components/Navigation/Drawer/index.module.scss","components/Navigation/MenuToggle/index.module.scss","containers/Quiz/index.module.scss","components/ActiveQuiz/index.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/index.module.scss","components/FinishedQuiz/index.module.scss","components/UI/Button/index.module.scss","components/UI/Loader/index.module.scss","containers/Auth/index.module.scss","components/UI/Input/index.module.scss","hoc/Layout/index.module.scss","components/UI/Backdrop/index.module.scss","components/ActiveQuiz/AnswersList/index.module.scss","containers/QuizList/index.module.scss","containers/QuizCreator/index.module.scss","components/UI/Select/index.module.scss","components/Navigation/MenuToggle/index.jsx","components/UI/Backdrop/index.jsx","components/Navigation/Drawer/index.jsx","hoc/Layout/index.jsx","components/ActiveQuiz/AnswersList/AnswerItem/index.jsx","components/ActiveQuiz/AnswersList/index.jsx","components/ActiveQuiz/index.jsx","components/UI/Button/index.jsx","components/FinishedQuiz/index.jsx","axios/axios-quiz.js","components/UI/Loader/index.jsx","containers/Quiz/index.jsx","containers/QuizList/index.jsx","components/UI/Input/index.jsx","containers/Auth/index.jsx","components/UI/Select/idnex.jsx","form/formFramework.js","hoc/Auxiliary/index.jsx","containers/QuizCreator/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","key","activeClassName","active","this","close","renderLinks","React","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","axios","create","baseURL","Loader","center","Quiz","isFinished","activeQuestion","answerState","loading","onAnswerClickHandler","answerId","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","get","match","params","response","data","console","log","QuizWrapper","QuizList","quizes","name","forEach","renderQuizes","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","a","authData","returnSecureToken","post","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","onSubmit","AuthForm","renderInputs","disabled","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","Auxiliary","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","sibmitHandler","addQuestionHandler","concat","questionItem","createQuizHandler","changeHandler","selectChangeHandler","select","renderControls","App","path","component","Boolean","location","hostname","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f55290a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2sXt2\",\"close\":\"Drawer_close__-2AVW\",\"active\":\"Drawer_active__u6ZGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__sjA9j\",\"open\":\"MenuToggle_open__2T04b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2SqNC\",\"QuizWrapper\":\"Quiz_QuizWrapper__3UAa6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3qX42\",\"Question\":\"ActiveQuiz_Question__VDaN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__2zELl\",\"success\":\"AnswerItem_success__3dZES\",\"error\":\"AnswerItem_error__1-dEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2OhJj\",\"success\":\"FinishedQuiz_success__15Ze8\",\"error\":\"FinishedQuiz_error__1weRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__iyUkn\",\"error\":\"Button_error__1B4A0\",\"success\":\"Button_success__3Mrcx\",\"primary\":\"Button_primary__MtHs3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__k1f64\",\"lds-ripple\":\"Loader_lds-ripple__3M6GY\",\"center\":\"Loader_center__3rsiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2XZJD\",\"AuthForm\":\"Auth_AuthForm__1R-CL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2dUiu\",\"invalid\":\"Input_invalid__1ZAWh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__Csj-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__7PGRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__gux43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__2ijfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__27SrD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1ohhR\"};","import React from 'react'\r\nimport classes from './index.module.scss'\r\n\r\nconst MenuToggle = props => {\r\n  const cls = [\r\n    classes.MenuToggle,\r\n    'fa'\r\n  ]\r\n\r\n  if (props.isOpen) {\r\n    cls.push('fa-times')\r\n    cls.push(classes.open)\r\n  } else {\r\n    cls.push('fa-bars')\r\n  }\r\n\r\n  return (\r\n    <i\r\n      className={cls.join(' ')}\r\n      onClick={props.onToggle}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MenuToggle","import React from \"react\";\r\nimport classes from './index.module.scss'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\r\n\r\nexport default Backdrop","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './index.module.scss'\r\nimport Backdrop from \"../../UI/Backdrop\";\r\n\r\n\r\nconst links = [\r\n  {to: '/', label: 'Список', exact: true},\r\n  {to: '/auth', label: 'Авторизация', exact: false},\r\n  {to: '/quiz-creator', label: 'Создать тест', exact: false},\r\n]\r\n\r\nclass Drawer extends React.Component {\r\n\r\n  clickHandler = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  renderLinks() {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName={classes.active}\r\n            onClick={this.clickHandler}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const cls = [classes.Drawer]\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push(classes.close)\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <nav className={cls.join(' ')}>\r\n          <ul>\r\n            { this.renderLinks() }\r\n          </ul>\r\n        </nav>\r\n        { this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Drawer","import React from \"react\";\r\nimport classes from \"./index.module.scss\";\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer\";\r\n\r\nclass Layout extends React.Component {\r\n\r\n  state = {\r\n    menu: false\r\n  }\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu\r\n    })\r\n  }\r\n\r\n  menuCloseHandler = () => {\r\n    this.setState({\r\n      menu: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n\r\n        <Drawer\r\n          isOpen={this.state.menu}\r\n          onClose={this.menuCloseHandler}\r\n        />\r\n\r\n        <MenuToggle\r\n          onToggle={this.toggleMenuHandler}\r\n          isOpen={this.state.menu}\r\n        />\r\n\r\n        <main>\r\n          { this.props.children }\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout","import React from \"react\";\r\nimport classes from \"./index.module.scss\";\r\n\r\nconst AnswerItem = props => {\r\n  const cls = [classes.AnswerItem]\r\n\r\n  if (props.state) {\r\n    cls.push(classes[props.state])\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={cls.join(' ')}\r\n      onClick={() => props.onAnswerClick(props.answer.id)}\r\n    >\r\n      { props.answer.text }\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AnswerItem;","import React from \"react\";\r\nimport classes from \"./index.module.scss\";\r\nimport AnswerItem from \"./AnswerItem\";\r\n\r\nconst AnswersList = props => {\r\n  return (\r\n    <ul className={classes.AnswersList}>\r\n      {props.answers.map((answer, index) => {\r\n        return (\r\n          <AnswerItem\r\n            key={index}\r\n            answer={answer}\r\n            onAnswerClick={props.onAnswerClick}\r\n            state={props.state ? props.state[answer.id] : null}\r\n          />\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default AnswersList;","import React from \"react\";\r\nimport classes from \"./index.module.scss\";\r\nimport AnswersList from \"./AnswersList\";\r\n\r\nconst ActiveQuiz = props => {\r\n  return (\r\n  <div className={classes.ActiveQuiz}>\r\n    <p className={classes.Question}>\r\n      <span>\r\n        <strong>{props.answerNumber}.</strong>&nbsp;\r\n        {props.question}\r\n      </span>\r\n\r\n      <small>{props.answerNumber} из { props.quizLength }</small>\r\n    </p>\r\n\r\n    <AnswersList\r\n      state={props.state}\r\n      answers={props.answers}\r\n      onAnswerClick={props.onAnswerClick}\r\n    />\r\n  </div>\r\n  )\r\n}\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport classes from './index.module.scss';\r\n\r\nconst Button = props => {\r\n  const cls = [\r\n    classes.Button,\r\n    classes[props.type]\r\n  ]\r\n\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={cls.join(' ')}\r\n      // disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport classes from \"./index.module.scss\"\r\nimport Button from \"../UI/Button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FinishedQuiz = props => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === 'success') {\r\n      total++\r\n    }\r\n\r\n    return total\r\n  }, 0)\r\n\r\n  return (\r\n    <div className={classes.FinishedQuiz}>\r\n      <ul>\r\n\r\n        { props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            'fa',\r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            classes[props.results[quizItem.id]]\r\n          ]\r\n\r\n          return (\r\n            <li key={index}\r\n\r\n            >\r\n              <strong>{index + 1}</strong>. &nbsp;\r\n              {quizItem.question}\r\n              <i className={cls.join(' ')}/>\r\n            </li>\r\n          )\r\n\r\n        }) }\r\n      </ul>\r\n\r\n      <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n      <div>\r\n        <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n        <Link to='/'>\r\n          <Button type=\"success\">Перейти в список тестов</Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://react-quiz-fc7b3.firebaseio.com/'\r\n})","import React from \"react\";\r\nimport classes from \"./index.module.scss\";\r\n\r\nconst Loader = props => (\r\n  <div className={classes.center}>\r\n    <div className={classes.Loader}>\r\n      <div /><div />\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Loader","import React, {Component} from 'react'\r\nimport classes from './index.module.scss'\r\nimport ActiveQuiz from '../../components/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz'\r\nimport axios from '../../axios/axios-quiz'\r\nimport Loader from '../../components/UI/Loader'\r\n\r\nclass Quiz extends Component {\r\n  state = {\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: [],\r\n    loading: true\r\n  }\r\n\r\n  onAnswerClickHandler = answerId => {\r\n    if (this.state.answerState) {\r\n      const key = Object.keys(this.state.answerState)[0]\r\n      if (this.state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n\r\n    const question = this.state.quiz[this.state.activeQuestion]\r\n    const results = this.state.results\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      this.setState({\r\n        answerState: {[answerId]: 'success'},\r\n        results\r\n      })\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (this.isQuizFinished()) {\r\n          this.setState({\r\n            isFinished: true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            answerState: null\r\n          })\r\n        }\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n    } else {\r\n      results[question.id] = 'error'\r\n      this.setState({\r\n        answerState: {[answerId]: 'error'},\r\n        results\r\n      })\r\n    }\r\n  }\r\n\r\n  isQuizFinished() {\r\n    return this.state.activeQuestion + 1 === this.state.quiz.length\r\n  }\r\n\r\n  retryHandler = () => {\r\n    this.setState({\r\n      activeQuestion: 0,\r\n      answerState: null,\r\n      isFinished: false,\r\n      results: {}\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(`/quizes/${this.props.match.params.id}.json`)\r\n      const quiz = response.data\r\n\r\n      this.setState({\r\n        quiz,\r\n        loading: false\r\n      })\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Quiz}>\r\n        <div className={classes.QuizWrapper}>\r\n          <h1>Ответьте на все вопросы</h1>\r\n\r\n          {\r\n            this.state.loading\r\n              ? <Loader />\r\n              : this.state.isFinished\r\n              ? <FinishedQuiz\r\n                results={this.state.results}\r\n                quiz={this.state.quiz}\r\n                onRetry={this.retryHandler}\r\n              />\r\n              : <ActiveQuiz\r\n                answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                question={this.state.quiz[this.state.activeQuestion].question}\r\n                onAnswerClick={this.onAnswerClickHandler}\r\n                quizLength={this.state.quiz.length}\r\n                answerNumber={this.state.activeQuestion + 1}\r\n                state={this.state.answerState}\r\n              />\r\n\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Quiz","import React, {Component} from 'react'\r\nimport classes from './index.module.scss'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Loader from '../../components/UI/Loader'\r\nimport axios from '../../axios/axios-quiz'\r\n\r\nexport default class QuizList extends Component {\r\n\r\n  state = {\r\n    quizes: [],\r\n    loading: true\r\n  }\r\n\r\n  renderQuizes() {\r\n    return this.state.quizes.map(quiz => {\r\n      return (\r\n        <li\r\n          key={quiz.id}\r\n        >\r\n          <NavLink to={'/quiz/' + quiz.id}>\r\n            {quiz.name}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get('/quizes.json')\r\n\r\n      const quizes = []\r\n\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Тест №${index + 1}`\r\n        })\r\n      })\r\n\r\n      this.setState({\r\n        quizes, loading: false\r\n      })\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.QuizList}>\r\n        <div>\r\n          <h1>Список тестов</h1>\r\n\r\n          {\r\n            this.state.loading\r\n              ? <Loader />\r\n              : <ul>\r\n                { this.renderQuizes() }\r\n              </ul>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport classes from \"./index.module.scss\";\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n  return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n  const inputType = props.type || 'text'\r\n  const cls = [classes.Input]\r\n  const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n  if (isInvalid(props)) {\r\n    cls.push(classes.invalid)\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n\r\n      />\r\n\r\n      {\r\n        isInvalid(props)\r\n          ? <span>{props.errorMessage || 'Введите верное значение'}</span>\r\n          : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React from \"react\";\r\nimport classes from \"./index.module.scss\"\r\nimport Button from \"../../components/UI/Button\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport is from \"is_js\";\r\nimport axios from 'axios'\r\n\r\n\r\nexport default class Auth extends React.Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Введите корректный email',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Пароль',\r\n        errorMessage: 'Введите корректный пароль',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loginHandler = async () => {\r\n    const authData = {\r\n      email: this.state.formControls.email.value,\r\n      password: this.state.formControls.password.value,\r\n      returnSecureToken: true\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBhuRwUU21r5NwhdD3xVUc_so-1iYio6Sg', authData)\r\n\r\n      console.log(response.data)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n\r\n  registerHandler = async () => {\r\n    const authData = {\r\n      email: this.state.formControls.email.value,\r\n      password: this.state.formControls.password.value,\r\n      returnSecureToken: true\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBhuRwUU21r5NwhdD3xVUc_so-1iYio6Sg', authData)\r\n\r\n      console.log(response.data)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.value = event.target.value\r\n    control.touched = true\r\n    control.valid = this.validateControl(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    let isFormValid = true\r\n\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid\r\n    })\r\n\r\n    this.setState({\r\n      formControls, isFormValid\r\n    })\r\n  }\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Авторизация</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n\r\n            {\r\n              this.renderInputs()\r\n            }\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Войти\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Зарегистрироваться\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./index.module.scss\";\r\n\r\nconst Select = props => {\r\n  const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n  return (\r\n    <div className={classes.Select}>\r\n      <label htmlFor={htmlFor}></label>\r\n      <select\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      >\r\n        { props.options.map((option, index) => {\r\n          return (\r\n            <option\r\n              value={option.value}\r\n              key={option.value + index}\r\n            >\r\n              {option.text}\r\n            </option>\r\n          )\r\n        }) }\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select","export function createControl(config, validation) {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    touched: false,\r\n    value: ''\r\n  }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n  if (!validation) {\r\n    return true\r\n  }\r\n\r\n  let isValid = true\r\n\r\n  if (validation.required) {\r\n    isValid = value.trim() !== '' && isValid\r\n  }\r\n\r\n\r\n  return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n  let isFormValid = true\r\n\r\n  for (let control in formControls) {\r\n    if (formControls.hasOwnProperty(control)) {\r\n      isFormValid = formControls[control].valid && isFormValid\r\n    }\r\n  }\r\n\r\n  return isFormValid\r\n}","const Auxiliary = props => props.children\n\nexport default Auxiliary","import React, {Component} from 'react'\r\nimport classes from './index.module.scss'\r\nimport Button from '../../components/UI/Button'\r\nimport Input from '../../components/UI/Input'\r\nimport Select from '../../components/UI/Select/idnex'\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport axios from '../../axios/axios-quiz'\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Вариант ${number}`,\r\n    errorMessage: 'Значение не может быть пустым',\r\n    id: number\r\n  }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Введите вопрос',\r\n      errorMessage: 'Вопрос не может быть пустым'\r\n    }, {required: true}),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4)\r\n  }\r\n}\r\n\r\nexport default class QuizCreator extends Component {\r\n\r\n  state = {\r\n    quiz: [],\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  }\r\n\r\n  sibmitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = event => {\r\n    event.preventDefault()\r\n\r\n    const quiz = this.state.quiz.concat()\r\n    const index = quiz.length + 1\r\n\r\n    const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: index,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        {text: option1.value, id: option1.id},\r\n        {text: option2.value, id: option2.id},\r\n        {text: option3.value, id: option3.id},\r\n        {text: option4.value, id: option4.id}\r\n      ]\r\n    }\r\n\r\n    quiz.push(questionItem)\r\n\r\n    this.setState({\r\n      quiz,\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n  }\r\n\r\n  createQuizHandler = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await axios.post('/quizes.json', this.state.quiz)\r\n\r\n      this.setState({\r\n        quiz: [],\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n      })\r\n\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls }\r\n    const control = { ...formControls[controlName] }\r\n\r\n    control.touched = true\r\n    control.value = value\r\n    control.valid = validate(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    })\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          { index === 0 ? <hr /> : null }\r\n        </Auxiliary>\r\n      )\r\n    })\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const select = <Select\r\n      label=\"Выберите правильный ответ\"\r\n      value={this.state.rightAnswerId}\r\n      onChange={this.selectChangeHandler}\r\n      options={[\r\n        {text: 1, value: 1},\r\n        {text: 2, value: 2},\r\n        {text: 3, value: 3},\r\n        {text: 4, value: 4}\r\n      ]}\r\n    />\r\n\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Создание теста</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n\r\n            { this.renderControls() }\r\n\r\n            { select }\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n              disabled={ !this.state.isFormValid }\r\n            >\r\n              Добавить вопрос\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.state.quiz.length === 0}\r\n            >\r\n              Создать тест\r\n            </Button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport Layout from \"./hoc/Layout\";\nimport Quiz from \"./containers/Quiz\"\nimport QuizList from \"./containers/QuizList\"\nimport Auth from \"./containers/Auth\"\nimport QuizCreator from \"./containers/QuizCreator\"\nimport {Route, Switch} from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/auth\" component={Auth}></Route>\n        <Route path=\"/quiz-creator\" component={QuizCreator}></Route>\n        <Route path=\"/quiz/:id\" component={Quiz}></Route>\n        <Route path=\"/\" component={QuizList}></Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}